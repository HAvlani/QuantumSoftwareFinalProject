//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QAOA\",\"Name\":\"Main\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":8,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs\",\"Position\":{\"Item1\":9,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QAOA\",\"Name\":\"Main\"},\"Attributes\":[],\"SourceFile\":\"/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs\",\"Position\":{\"Item1\":9,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QAOA\",\"Name\":\"Rzz\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs\",\"Position\":{\"Item1\":13,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"register\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":15},\"Item2\":{\"Line\":1,\"Column\":23}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"theta\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":34},\"Item2\":{\"Line\":1,\"Column\":39}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"indexC\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":49},\"Item2\":{\"Line\":1,\"Column\":55}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"indexT\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":62},\"Item2\":{\"Line\":1,\"Column\":68}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"Double\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QAOA\",\"Name\":\"Rzz\"},\"Attributes\":[],\"SourceFile\":\"/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs\",\"Position\":{\"Item1\":13,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QAOA\",\"Name\":\"ProblemUnitary\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":25}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"register\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":27},\"Item2\":{\"Line\":1,\"Column\":35}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"gamma\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":47},\"Item2\":{\"Line\":1,\"Column\":52}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"Double\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QAOA\",\"Name\":\"ProblemUnitary\"},\"Attributes\":[],\"SourceFile\":\"/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":25}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QAOA\",\"Name\":\"MixingUnitary\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs\",\"Position\":{\"Item1\":26,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":24}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"register\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":25},\"Item2\":{\"Line\":1,\"Column\":33}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"beta\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":44},\"Item2\":{\"Line\":1,\"Column\":48}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"Double\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QAOA\",\"Name\":\"MixingUnitary\"},\"Attributes\":[],\"SourceFile\":\"/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs\",\"Position\":{\"Item1\":26,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":24}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QAOA\",\"Name\":\"MakeCircuit\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs\",\"Position\":{\"Item1\":34,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"num_qubits\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":23},\"Item2\":{\"Line\":1,\"Column\":33}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"gamma\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":40},\"Item2\":{\"Line\":1,\"Column\":45}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"beta\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":55},\"Item2\":{\"Line\":1,\"Column\":59}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Double\"},{\"Case\":\"Double\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QAOA\",\"Name\":\"MakeCircuit\"},\"Attributes\":[],\"SourceFile\":\"/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs\",\"Position\":{\"Item1\":34,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
#line hidden
namespace QAOA
{
    [SourceLocation("/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs", OperationFunctor.Body, 10, 14)]
    public partial class Main : Operation<QVoid, QVoid>, ICallable
    {
        public Main(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Main";
        String ICallable.FullName => "QAOA.Main";
        public static EntryPointInfo<QVoid, QVoid> Info => new EntryPointInfo<QVoid, QVoid>(typeof(Main));
        protected ICallable<(Int64,Double,Double), QVoid> MakeCircuit__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line 11 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
            MakeCircuit__.Apply((4L, 4D, 4D));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.MakeCircuit__ = this.__Factory__.Get<ICallable<(Int64,Double,Double), QVoid>>(typeof(MakeCircuit));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<Main, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs", OperationFunctor.Body, 14, 20)]
    public partial class Rzz : Operation<(IQArray<Qubit>,Double,Int64,Int64), QVoid>, ICallable
    {
        public Rzz(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,Double,Int64,Int64)>, IApplyData
        {
            public In((IQArray<Qubit>,Double,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item1)?.Qubits;
                }
            }
        }

        String ICallable.Name => "Rzz";
        String ICallable.FullName => "QAOA.Rzz";
        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Rz
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,Double,Int64,Int64), QVoid> __Body__ => (__in__) =>
        {
            var (register,theta,indexC,indexT) = __in__;
#line 15 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((register[indexC], register[indexT]));
#line 16 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
            Microsoft__Quantum__Intrinsic__Rz.Apply(((2D * theta), register[indexT]));
#line 17 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((register[indexC], register[indexT]));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
            this.Microsoft__Quantum__Intrinsic__Rz = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Rz));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,Double,Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> register, Double theta, Int64 indexC, Int64 indexT)
        {
            return __m__.Run<Rzz, (IQArray<Qubit>,Double,Int64,Int64), QVoid>((register, theta, indexC, indexT));
        }
    }

    [SourceLocation("/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs", OperationFunctor.Body, 20, 27)]
    public partial class ProblemUnitary : Operation<(IQArray<Qubit>,Double), QVoid>, ICallable
    {
        public ProblemUnitary(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,Double)>, IApplyData
        {
            public In((IQArray<Qubit>,Double) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item1)?.Qubits;
                }
            }
        }

        String ICallable.Name => "ProblemUnitary";
        String ICallable.FullName => "QAOA.ProblemUnitary";
        protected ICallable<(IQArray<Qubit>,Double,Int64,Int64), QVoid> Rzz__
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,Double), QVoid> __Body__ => (__in__) =>
        {
            var (register,gamma) = __in__;
#line 21 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
            Rzz__.Apply((register, gamma, 0L, 1L));
#line 22 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
            Rzz__.Apply((register, gamma, 0L, 3L));
#line 23 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
            Rzz__.Apply((register, gamma, 1L, 2L));
#line 24 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
            Rzz__.Apply((register, gamma, 2L, 3L));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Rzz__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,Double,Int64,Int64), QVoid>>(typeof(Rzz));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,Double) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> register, Double gamma)
        {
            return __m__.Run<ProblemUnitary, (IQArray<Qubit>,Double), QVoid>((register, gamma));
        }
    }

    [SourceLocation("/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs", OperationFunctor.Body, 27, 35)]
    public partial class MixingUnitary : Operation<(IQArray<Qubit>,Double), QVoid>, ICallable
    {
        public MixingUnitary(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,Double)>, IApplyData
        {
            public In((IQArray<Qubit>,Double) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item1)?.Qubits;
                }
            }
        }

        String ICallable.Name => "MixingUnitary";
        String ICallable.FullName => "QAOA.MixingUnitary";
        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Rx
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,Double), QVoid> __Body__ => (__in__) =>
        {
            var (register,beta) = __in__;
#line 28 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
            Microsoft__Quantum__Intrinsic__Rx.Apply(((2D * beta), register[0L]));
#line 29 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
            Microsoft__Quantum__Intrinsic__Rx.Apply(((2D * beta), register[1L]));
#line 30 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
            Microsoft__Quantum__Intrinsic__Rx.Apply(((2D * beta), register[2L]));
#line 31 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
            Microsoft__Quantum__Intrinsic__Rx.Apply(((2D * beta), register[3L]));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__Rx = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Rx));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,Double) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> register, Double beta)
        {
            return __m__.Run<MixingUnitary, (IQArray<Qubit>,Double), QVoid>((register, beta));
        }
    }

    [SourceLocation("/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs", OperationFunctor.Body, 35, -1)]
    public partial class MakeCircuit : Operation<(Int64,Double,Double), QVoid>, ICallable
    {
        public MakeCircuit(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Double,Double)>, IApplyData
        {
            public In((Int64,Double,Double) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "MakeCircuit";
        String ICallable.FullName => "QAOA.MakeCircuit";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Canon__ApplyToEach
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,Double), QVoid> ProblemUnitary__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,Double), QVoid> MixingUnitary__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<(Int64,Double,Double), QVoid> __Body__ => (__in__) =>
        {
            var (num_qubits,gamma,beta) = __in__;
#line hidden
            {
#line 36 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
                var register = Allocate__.Apply(num_qubits);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 37 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
                    Microsoft__Quantum__Canon__ApplyToEach.Apply((Microsoft__Quantum__Intrinsic__H, register));
#line 38 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
                    ProblemUnitary__.Apply((register, gamma));
#line 39 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
                    MixingUnitary__.Apply((register, beta));
#line 40 "/Users/harshilavlani/QuantumSoftwareFinalProject/QAOA/Program.qs"
                    ResetAll__.Apply(register);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(register);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Canon__ApplyToEach = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ApplyToEach<>));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.ProblemUnitary__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,Double), QVoid>>(typeof(ProblemUnitary));
            this.MixingUnitary__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,Double), QVoid>>(typeof(MixingUnitary));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__((Int64,Double,Double) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Int64 num_qubits, Double gamma, Double beta)
        {
            return __m__.Run<MakeCircuit, (Int64,Double,Double), QVoid>((num_qubits, gamma, beta));
        }
    }
}